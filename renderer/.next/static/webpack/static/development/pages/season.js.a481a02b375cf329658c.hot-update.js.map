{"version":3,"file":"static/webpack/static\\development\\pages\\season.js.a481a02b375cf329658c.hot-update.js","sources":["webpack:///./pages/season.js"],"sourcesContent":["import { Component } from 'react'\r\nimport Layout from './../components/MyLayout'\r\nimport Cadre from './../components/Cadre'\r\n\r\nexport default class extends Component {\r\n  /*static async getInitialProps(){\r\n  \tconst response = await fetch(`https://api.jikan.moe/v3/season/${(new Date()).getYear() + 1900}/${getSeason()}`)\r\n    const data = await response.json()\r\n\r\n    const animesTV = data.anime.filter(val => val.type === 'TV')\r\n    console.log(animesTV)\r\n    return { animesTV }\r\n  }*/\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    \tanimesTV: [],\r\n    \tinfo: false\r\n    };\r\n    this.handleInfo = this.handleInfo.bind(this)\r\n  }\r\n  async componentDidMount() {\r\n    const response = await fetch(`https://api.jikan.moe/v3/season/${(new Date()).getYear() + 1900}/${getSeason()}`)\r\n    const data = await response.json()\r\n\r\n    const animesTV = data.anime.filter(val => val.type === 'TV')\r\n    this.setState({ animesTV })\r\n  }\r\n\r\n  handleInfo(info){\r\n  \tthis.setState({ info })\r\n  \tconsole.log(info)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <div id=\"grid\">\r\n          { this.state.info ? \r\n          \t<div id=\"info\">\r\n          \t\t<div className=\"exit\" onClick={()=>{ this.handleInfo(false) }}></div>\r\n          \t\t<div className=\"title\">{this.state.info.title}</div>\r\n          \t\t<div className=\"synopsis\">{this.state.info.synopsis}</div>\r\n          \t\t<div className=\"data\">\r\n          \t\t\t<span>Episodes: {this.state.info.episodes}</span>\r\n          \t\t\t<span>Genres: {this.state.info.genres.map(val => val.name).joint(', ')}</span>\r\n          \t\t</div>\r\n          \t</div> :\r\n          \tnull\r\n          }\r\n          {\r\n          \tthis.state.animesTV.map((val, index) => {\r\n          \t\treturn (\r\n          \t\t\t<Cadre info={this.handleInfo} anime={val} key={val.mal_id} />\r\n          \t\t)\r\n          \t})\r\n          }\r\n          <style jsx>{`\r\n            #grid {\r\n            \tdisplay: flex;\r\n            \tflex-wrap: wrap;\r\n            \tjustify-content: space-around;\r\n            \tposition: relative;\r\n            }\r\n            #info {\r\n            \tposition: absolute;\r\n            \ttop: 0;\r\n            \tleft: 0;\r\n            \twidth: 100%;\r\n            \theight: 100%;\r\n            \tz-index: 1;\r\n            \tbackground-color: #000000de;\r\n            \tpadding: 0 50px;\r\n    \t\t\tbox-sizing: border-box;\r\n            }\r\n            .title {\r\n            \ttext-align: center;\r\n\t\t\t    font-weight: 600;\r\n\t\t\t    font-size: 2rem;\r\n\t\t\t    padding: 50px 0;\r\n            }\r\n            .synopsis {\r\n            \tfont-size: 1.05rem;\r\n\t\t\t    text-indent: 2rem;\r\n\t\t\t    max-width: 800px;\r\n\t\t\t    margin: auto;\r\n            }\r\n            .exit {\r\n            \twidth: 50px;\r\n            \theight: 50px;\r\n            \tposition: fixed;\r\n            \ttop: 20px;\r\n            \tleft: 20px;\r\n            \tcursor: pointer;\r\n            }\r\n            .exit:before,\r\n            .exit:after {\r\n            \tcontent: '';\r\n            \twidth: 40px;\r\n            \theight: 2px;\r\n            \tbackground-color: #fff;\r\n            \tposition: absolute;\r\n            \ttop: calc(25px - 1px);\r\n            \tleft: 5px;\r\n            \ttransform-origin: center;\r\n            }\r\n            .exit:before {\r\n            \ttransform: rotateZ(45deg);\r\n            }\r\n            .exit:after {\r\n            \ttransform: rotateZ(-45deg);\r\n            }\r\n          `}</style>\r\n        </div>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nfunction getSeason() {\r\n    const month = new Date().getMonth() + 1\r\n    let season = '';\r\n    switch(month) {\r\n        case 12:\r\n        case 1:\r\n        case 2:\r\n            season = 'winter';\r\n        break;\r\n        case 3:\r\n        case 4:\r\n        case 5:\r\n            season = 'spring';\r\n        break;\r\n        case 6:\r\n        case 7:\r\n        case 8:\r\n            season = 'summer';\r\n        break;\r\n        case 9:\r\n        case 10: \r\n        case 11:\r\n            season = 'fall';\r\n        break;\r\n    }\r\n    return season\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;;AAEA;;;;;;;AASA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AANA;AAOA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;;AACA;AACA;;AADA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;AAEA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AAAA;AAAA;AAEA;AAlBA;AAAA;AA+EA;;;;AAjHA;AACA;;;AAmHA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AApBA;AACA;AAqBA;AACA;;;;A","sourceRoot":""}