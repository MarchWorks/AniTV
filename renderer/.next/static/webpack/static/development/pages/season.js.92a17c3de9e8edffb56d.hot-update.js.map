{"version":3,"file":"static/webpack/static\\development\\pages\\season.js.92a17c3de9e8edffb56d.hot-update.js","sources":["webpack:///./pages/season.js"],"sourcesContent":["import { Component } from 'react'\r\nimport Layout from './../components/MyLayout'\r\nimport Cadre from './../components/Cadre'\r\n\r\nexport default class extends Component {\r\n  /*static async getInitialProps(){\r\n  \tconst response = await fetch(`https://api.jikan.moe/v3/season/${(new Date()).getYear() + 1900}/${getSeason()}`)\r\n    const data = await response.json()\r\n\r\n    const animesTV = data.anime.filter(val => val.type === 'TV')\r\n    console.log(animesTV)\r\n    return { animesTV }\r\n  }*/\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    \tanimesTV: []\r\n    }; \r\n  }\r\n  async componentDidMount() {\r\n    const response = await fetch(`https://api.jikan.moe/v3/season/${(new Date()).getYear() + 1900}/${getSeason()}`)\r\n    const data = await response.json()\r\n\r\n    const animesTV = data.anime.filter(val => val.type === 'TV')\r\n    this.setState({ animesTV })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <div id=\"grid\">\r\n          {\r\n          \tthis.state.animesTV.forEach((val, index) => {\r\n          \t\treturn (\r\n          \t\t\t<Cadre anime={val} key={val.mal_id} />\r\n          \t\t)\r\n          \t})\r\n          }\r\n          <style jsx>{`\r\n            #grid {\r\n            \tdisplay: flex;\r\n            \tflex-wrap: wrap;\r\n            }\r\n          `}</style>\r\n        </div>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nfunction getSeason() {\r\n    const month = new Date().getMonth() + 1\r\n    let season = '';\r\n    switch(month) {\r\n        case 12:\r\n        case 1:\r\n        case 2:\r\n            season = 'winter';\r\n        break;\r\n        case 3:\r\n        case 4:\r\n        case 5:\r\n            season = 'spring';\r\n        break;\r\n        case 6:\r\n        case 7:\r\n        case 8:\r\n            season = 'summer';\r\n        break;\r\n        case 9:\r\n        case 10: \r\n        case 11:\r\n            season = 'fall';\r\n        break;\r\n    }\r\n    return season\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;;AAEA;;;;;;;AASA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAFA;AAKA;AACA;;;;;;;;;;;;;AACA;AACA;;AADA;;AACA;AACA;;AADA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;AAEA;AACA;AAEA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAEA;AANA;AAAA;AAiBA;;;;AA5CA;AACA;;;AA8CA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AApBA;AACA;AAqBA;AACA;;;;A","sourceRoot":""}